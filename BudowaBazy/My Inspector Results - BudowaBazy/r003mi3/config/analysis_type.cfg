<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <id>mc3</id>
  <name>mc3.name</name>
  <shortName>mc3.name</shortName>
  <description>mc3.description</description>
  <alias>mi3</alias>
  <abbreviation>mi3</abbreviation>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">intel.che.nem.analysis_type_memory_pane_f3110</property>
  <property name="slowdown">20x-80x</property>
  <property name="memory_overhead_image">peak-m3</property>
  <property name="analysis_overhead_image">choice_3</property>
 </internal>
 <prerequisites/>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <booleanKnob id="detect_invalid_accesses" cliName="detect-invalid-accesses" displayName="knob.detect_invalid_accesses.name">
   <description>knob.detect_invalid_accesses.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="analyze_stack" cliName="analyze-stack" displayName="knob.analyze_stack.name">
   <description>knob.analyze_stack.description</description>
   <boolean:defaultValue>false</boolean:defaultValue>
   <knobProperty name="active_state">detect_invalid_accesses=parent_value</knobProperty>
   <boolean:knobProperty name="parent_value">true</boolean:knobProperty>
  </booleanKnob>
  <booleanKnob id="detect_leaks_on_exit" cliName="detect-leaks-on-exit" displayName="knob.detect_leaks_on_exit.name">
   <description>knob.detect_leaks_on_exit.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="detect_resource_leaks" cliName="detect-resource-leaks" displayName="knob.detect_resource_leaks.name" boolean:visible="false">
   <xsl:if test="exsl:ctx('targetOS') = 'Windows'">
    <xsl:attribute name="boolean:visible">true</xsl:attribute>
   </xsl:if>
   <description>knob.detect_resource_leaks.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="resources" cliName="resources" displayName="knob.resources.name" boolean:visible="false">
   <description>knob.resources.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="enable_memory_growth_detection" cliName="enable-memory-growth-detection" displayName="knob.enable_memory_growth_detection.name">
   <description>knob.enable_memory_growth_detection.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="detect_leaks_on_demand" cliName="enable-on-demand-leak-detection" displayName="knob.detect_leaks_on_demand.name">
   <description>knob.detect_leaks_on_demand.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="remove_duplicates" cliName="remove-duplicates" displayName="knob.remove_duplicates.name">
   <description>knob.remove_duplicates.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="duplicate_elimination" cliName="duplicate-elimination" displayName="knob.duplicate_elimination.name" boolean:visible="false">
   <description>knob.duplicate_elimination.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="still_allocated_memory" cliName="still-allocated-memory" displayName="knob.still_allocated_memory.name">
   <description>knob.still_allocated_memory.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="stack_depth" cliName="stack-depth" displayName="knob.stack_depth.name">
   <description>knob.stack_depth.description</description>
   <values>
    <value displayName="knob.stack_depth.1">1</value>
    <value displayName="knob.stack_depth.8">8</value>
    <value displayName="knob.stack_depth.16">16</value>
    <value displayName="knob.stack_depth.24">24</value>
    <value displayName="knob.stack_depth.32">32</value>
    <defaultValue>16</defaultValue>
   </values>
  </enumKnob>
 </knobs>
 <analysis xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <collector id="runmc">
   <binaryName>runmc</binaryName>
   <boolean:collectorKnob knob="cknob_detect_invalid_accesses">true</boolean:collectorKnob>
   <boolean:collectorKnob knob="cknob_dangling_pointer_check">true</boolean:collectorKnob>
   <boolean:collectorKnob knob="cknob_guard_zones">true</boolean:collectorKnob>
   <collectorKnob knob="cknob_still_allocated_memory">
    <xsl:value-of select="exsl:ctx('still_allocated_memory')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_detect_leaks_on_exit">
    <xsl:value-of select="exsl:ctx('detect_leaks_on_exit')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_detect_leaks_on_demand">
    <xsl:value-of select="exsl:ctx('detect_leaks_on_demand')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_enable_memory_growth_detection">
    <xsl:value-of select="exsl:ctx('enable_memory_growth_detection')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_stack_depth">
    <xsl:value-of select="exsl:ctx('stack_depth')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_detect_invalid_accesses">
    <xsl:value-of select="exsl:ctx('detect_invalid_accesses')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_analyze_stack">
    <xsl:value-of select="exsl:ctx('analyze_stack')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_detect_resource_leaks">
    <xsl:choose>
     <xsl:when test="(exsl:ctx('resources')) and (exsl:ctx('detect_resource_leaks'))">true</xsl:when>
     <xsl:otherwise>false</xsl:otherwise>
    </xsl:choose>
   </collectorKnob>
   <collectorKnob knob="cknob_remove_duplicates">
    <xsl:choose>
     <xsl:when test="(exsl:ctx('duplicate_elimination')) and (exsl:ctx('remove_duplicates'))">true</xsl:when>
     <xsl:otherwise>false</xsl:otherwise>
    </xsl:choose>
   </collectorKnob>
  </collector>
 </analysis>
</bag>
